# --------------------------------------------------------------------------------------------------
# Constraint File for the Zybo-Z7 20 Board
# --------------------------------------------------------------------------------------------------

# --------------------------------------------------------------------------------------------------
# Clock Source
# --------------------------------------------------------------------------------------------------
set_property -dict { PACKAGE_PIN K17  IOSTANDARD LVCMOS33 }     [get_ports { sys_clk_p }];          #IO_L12P_T1_MRCC_35         Sch=sysclk
create_clock -add -name sys_clk -period 8.00 -waveform {0 4}    [get_ports { sys_clk_p }];


# SoC clock is generated by clock wizard and its constraints
set SOC_TCK 50.0
set soc_clk [get_clocks -of_objects [get_pins i_clkwiz/clk_20]]

# --------------------------------------------------------------------------------------------------
# Switches
# --------------------------------------------------------------------------------------------------
set_property -dict { PACKAGE_PIN G15  IOSTANDARD LVCMOS33 }     [get_ports { fetch_en_i }];    #IO_L19N_T3_VREF_35         Sch=sw[0]
set_property -dict { PACKAGE_PIN P15  IOSTANDARD LVCMOS33 }     [get_ports { gpio_i[0]  }];    #IO_L24P_T3_34              Sch=sw[1]
set_property -dict { PACKAGE_PIN W13  IOSTANDARD LVCMOS33 }     [get_ports { gpio_i[1]  }];    #IO_L4N_T0_34               Sch=sw[2]
set_property -dict { PACKAGE_PIN T16  IOSTANDARD LVCMOS33 }     [get_ports { gpio_i[2]  }];    #IO_L9P_T1_DQS_34           Sch=sw[3]

# set_false_path -from [get_ports {fetch_en_i}] -to *
# set_input_delay -clock sys_clk 0.0 [get_ports {fetch_en_i}]

set_false_path -from [get_ports {gpio_i*}] -to *
set_input_delay -clock sys_clk 0.0 [get_ports {gpio_i*}]

# --------------------------------------------------------------------------------------------------
# Buttons
# --------------------------------------------------------------------------------------------------
set_property -dict { PACKAGE_PIN K18  IOSTANDARD LVCMOS33 }     [get_ports { sys_reset }];       #IO_L12N_T1_MRCC_35         Sch=btn[0]
set_property -dict { PACKAGE_PIN P16  IOSTANDARD LVCMOS33 }     [get_ports { gpio_i[3] }];       #IO_L24N_T3_34              Sch=btn[1]


# --------------------------------------------------------------------------------------------------
# LEDs
# --------------------------------------------------------------------------------------------------
set_property -dict { PACKAGE_PIN M14  IOSTANDARD LVCMOS33 }     [get_ports { status_o  }];       #IO_L23P_T3_35              Sch=led[0]
set_property -dict { PACKAGE_PIN M15  IOSTANDARD LVCMOS33 }     [get_ports { gpio_o[0] }];       #IO_L23N_T3_35              Sch=led[1]
set_property -dict { PACKAGE_PIN G14  IOSTANDARD LVCMOS33 }     [get_ports { gpio_o[1] }];       #IO_0_35                    Sch=led[2]
set_property -dict { PACKAGE_PIN D18  IOSTANDARD LVCMOS33 }     [get_ports { gpio_o[2] }];       #IO_L3N_T0_DQS_AD1N_35      Sch=led[3]
set_property -dict { PACKAGE_PIN F17   IOSTANDARD LVCMOS33 }    [get_ports { gpio_o[3] }];       #IO_L6N_T0_VREF_35 Sch=led6_g

set_false_path -from * -to [get_ports {status_o}]
set_output_delay -clock sys_clk 0.0 [get_ports {status_o}]

set_false_path -from * -to [get_ports {gpio_o*}]
set_output_delay -clock sys_clk 0.0 [get_ports {gpio_o*}]



# --------------------------------------------------------------------------------------------------
# Pmod Header JB (Zybo Z7-20 only)
# --------------------------------------------------------------------------------------------------
set_property -dict { PACKAGE_PIN V8   IOSTANDARD LVCMOS33 }     [get_ports { jtag_tms_i   }];          #IO_L15P_T2_DQS_13          Sch=jb_p[1]
set_property -dict { PACKAGE_PIN W8   IOSTANDARD LVCMOS33 }     [get_ports { jtag_tdi_i   }];          #IO_L15N_T2_DQS_13          Sch=jb_n[1]
set_property -dict { PACKAGE_PIN U7   IOSTANDARD LVCMOS33 }     [get_ports { jtag_tdo_o   }];          #IO_L11P_T1_SRCC_13         Sch=jb_p[2]
set_property -dict { PACKAGE_PIN V7   IOSTANDARD LVCMOS33 }     [get_ports { jtag_tck_i   }];          #IO_L11N_T1_SRCC_13         Sch=jb_n[2]

# --------------------------------------------------------------------------------------------------
# Pmod Header JC
# --------------------------------------------------------------------------------------------------
set_property -dict { PACKAGE_PIN V15  IOSTANDARD LVCMOS33 }     [get_ports { uart_rx_i }];          #IO_L10P_T1_34              Sch=jc_p[1]
set_property -dict { PACKAGE_PIN W15  IOSTANDARD LVCMOS33 }     [get_ports { uart_tx_o }];          #IO_L10N_T1_34              Sch=jc_n[1]



############
# Switches #
############

set_input_delay -min -clock $soc_clk [expr { $SOC_TCK * 0.10 }] [ \
    get_ports {fetch_en_i}]
set_input_delay -max -clock $soc_clk [expr { $SOC_TCK * 0.35 }] [ \
    get_ports {fetch_en_i}]

set_max_delay [expr { 2 * $SOC_TCK }] -from [get_ports {fetch_en_i}]
set_false_path -hold -from [get_ports {fetch_en_i}]

#################
# Clock routing #
#################

# JTAG is on non-clock-capable GPIOs (if not using BSCANE)
set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets -of [get_ports jtag_tck_i]]
set_property CLOCK_BUFFER_TYPE NONE [get_nets -of [get_ports jtag_tck_i]]

set_property CLOCK_DEDICATED_ROUTE FALSE [get_nets -of [get_ports sys_reset*]]
set_property CLOCK_BUFFER_TYPE NONE [get_nets -of [get_ports sys_reset*]]

# Remove avoid tc_clk_mux2 to use global clock routing
set all_in_mux [get_nets -of [ get_pins -filter { DIRECTION == IN } -of \
    [get_cells -hier -filter { ORIG_REF_NAME == tc_clk_mux2 || REF_NAME == tc_clk_mux2 }]]]
set_property CLOCK_DEDICATED_ROUTE FALSE $all_in_mux
set_property CLOCK_BUFFER_TYPE NONE $all_in_mux

########
# JTAG #
########

# 10 MHz (max) JTAG clock
set JTAG_TCK 100.0

# JTAG Clock
create_clock -period $JTAG_TCK -name clk_jtag [get_ports jtag_tck_i]
set_input_jitter clk_jtag 1.000

# JTAG Clock is asynchronous to all other clocks
set_clock_groups -name jtag_async -asynchronous -group {clk_jtag}

set_input_delay -min -clock clk_jtag [expr { 0.10 * $JTAG_TCK }] [get_ports {jtag_tdi_i jtag_tms_i}]
set_input_delay -max -clock clk_jtag [expr { 0.20 * $JTAG_TCK }] [get_ports {jtag_tdi_i jtag_tms_i}]

set_output_delay -min -clock clk_jtag [expr { 0.10 * $JTAG_TCK }] [get_ports jtag_tdo_o]
set_output_delay -max -clock clk_jtag [expr { 0.20 * $JTAG_TCK }] [get_ports jtag_tdo_o]

# set_max_delay -from [get_ports jtag_trst_ni] $JTAG_TCK
# set_false_path -hold -from [get_ports jtag_trst_ni]

########
# UART #
########

# UART speed is at most 5 Mb/s
set UART_IO_SPEED 200.0

set_max_delay [expr { $UART_IO_SPEED * 0.35 }] -from [get_ports uart_rx_i]
set_false_path -hold -from [get_ports uart_rx_i]

set_max_delay [expr { $UART_IO_SPEED * 0.35 }] -to [get_ports uart_tx_o]
set_false_path -hold -to [get_ports uart_tx_o]

########
# CDCs #
########

# Disable hold checks on CDCs
set_property KEEP_HIERARCHY SOFT [get_cells -hier \
    -filter {ORIG_REF_NAME=="sync" || REF_NAME=="sync"}]
set_false_path -hold -through [get_pins -of_objects [get_cells -hier \
    -filter {ORIG_REF_NAME=="sync" || REF_NAME=="sync"}] -filter {NAME=~*serial_i}]

set_false_path -hold -through [get_pins -of_objects [get_cells -hier \
    -filter {ORIG_REF_NAME =~ cdc_*src* || REF_NAME =~ cdc_*src*}] -filter {NAME =~ *async*}]
set_false_path -hold -through [get_pins -of_objects [get_cells -hier \
    -filter {ORIG_REF_NAME =~ cdc_*dst* || REF_NAME =~ cdc_*dst*}] -filter {NAME =~ *async*}]